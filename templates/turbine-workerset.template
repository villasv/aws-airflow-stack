AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates the Airflow worker instances in a highly available auto
  scaling group spanning two private subnets, plus an EFS to work as shared
  network directory and a custom cloudwatch load metric function to guide the
  auto scaling alarm triggers. **WARNING** This template creates AWS resources.
  You will be billed for the AWS resources used if you create a stack from this
  template. QS(0027)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC network configuration
        Parameters:
          - VPCID
          - PrivateSubnet1AID
          - PrivateSubnet2AID
          - SecurityGroupID
      - Label:
          default: Turbine cluster configuration
        Parameters:
          - DatabaseSecret
          - QueueName
          - LogsBucket
      - Label:
          default: Turbine workerset configuration
        Parameters:
          - InstanceType
          - MinGroupSize
          - MaxGroupSize
          - ShrinkThreshold
          - GrowthThreshold
      - Label:
          default: Apache Airflow configuration
        Parameters:
          - LoadExampleDags
          - LoadDefaultCons
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      VPCID:
        default: VPC ID
      PrivateSubnet1AID:
        default: Private subnet 1 ID
      PrivateSubnet2AID:
        default: Private subnet 2 ID
      SecurityGroupID:
        default: Security group ID
      DatabaseSecret:
        default: Database secret
      QueueName:
        default: Queue name
      LogsBucket:
        default: Logs bucket
      InstanceType:
        default: Scheduler instance type
      MinGroupSize:
        default: Minimum group size
      MaxGroupSize:
        default: Maximum group size
      ShrinkThreshold:
        default: Shrink threshold
      GrowthThreshold:
        default: Growth threshold
      LoadExampleDags:
        default: Load example DAGs
      LoadDefaultCons:
        default: Load default connections
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:

  VPCID:
    Description: An existing VPC for the cluster.
    Type: AWS::EC2::VPC::Id
  PrivateSubnet1AID:
    Description: An existing private Subnet in some Availability Zone.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2AID:
    Description: An existing private Subnet in another Availability Zone.
    Type: AWS::EC2::Subnet::Id
  SecurityGroupID:
    Description: >-
      Security Group ID of an externally managed security group that gives
      instances access to relevant external resources like the metadata database
      endpoints in the two provided subnets.
    Type: AWS::EC2::SecurityGroup::Id

  DatabaseSecret:
    Description: >-
      The AWS SecretsManager Secret resource name (ARN) of the secure secret
      storing the metadata database connection credentials.
    Type: String
  QueueName:
    Description: >-
      Name of the queue to be used as message broker between the scheduler and
      worker instances.
    Type: String
  LogsBucket:
    Description: >-
      Name of the bucket where task logs are remotely stored.
    Type: String

  InstanceType:
    Description: >-
      EC2 instance type to use for the scheduler.
    Type: String
  MinGroupSize:
    Description: The minimum number of active worker instances.
    Default: 0
    Type: Number
  MaxGroupSize:
    Description: The maximum number of active worker instances.
    Default: 10
    Type: Number
  ShrinkThreshold:
    Description: >-
      The threshold for the average queue size from which going equal or below
      will trigger the AutoScaling group to Scale In, deallocating one worker
      instance.
    Default: 0.5
    Type: Number
  GrowthThreshold:
    Description: >-
      The threshold for the average queue size from which going equal or above
      will trigger the AutoScaling group to Scale Out, allocating one worker
      instance.
    Default: 0.9
    Type: Number

  LoadExampleDags:
    Description: >-
      Load the example DAGs distributed with Airflow. Useful if deploying a
      stack for demonstrating a few topologies, operators and scheduling
      strategies.
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
    Type: String
  LoadDefaultCons:
    Description: >-
      Load the default connections initialized by Airflow. Most consider these
      unnecessary, which is why the default is to not load them.
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
    Type: String

  QSS3BucketName:
    Description: >-
      S3 bucket name for the Quick Start assets. You can specify your own bucket
      providing assets and submodules, if you want to override the Quick Start
      behavior for your specific implementation.
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    Default: turbine-quickstart
    Type: String
  QSS3KeyPrefix:
    Description: >-
      S3 key prefix for the Quick Start assets. You can scpeficy your own
      "directory" providing the stack templates, if you want to override the
      Quick Start behavior for your specific implementation.
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    Default: quickstart-turbine-airflow/
    Type: String

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'turbine-quickstart']

Resources:

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref AWS::Region
        - AMZNLINUX2
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref SecurityGroup
        - !Ref SecurityGroupID
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init -v \
            --stack ${AWS::StackName} \
            --resource LaunchConfiguration
          /opt/aws/bin/cfn-signal -e $?
            --stack ${AWS::StackName} \
            --resource LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            setup:
              command: !Sub |
                export AWS_STACK_NAME="${AWS::StackName}"
                export QUEUE_NAME="${QueueName}"
                export LOGS_BUCKET="${LogsBucket}"
                export FILE_SYSTEM_ID="${FileSystem}"
                export DB_SECRETS_ARN="${DatabaseSecret}"
                export LOAD_EXAMPLES="${LoadExampleDags}"
                export LOAD_DEFAULTS="${LoadDefaultCons}"
                aws s3 sync s3://${QSS3BucketName}/${QSS3KeyPrefix}scripts /opt/turbine
                chmod +x /opt/turbine/workerset.setup.sh
                /opt/turbine/workerset.setup.sh

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        The security group used by the Airflow worker instances. It exposes the
        a special port where the Airflow webserver can fetch logs directly.
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref SecurityGroupID
          IpProtocol: TCP
          FromPort: 8793
          ToPort: 8793
      Tags:
        - Key: Name
          Value: turbine-workerset-sg

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: !Ref MaxGroupSize
      MinSize: !Ref MinGroupSize
      MetricsCollection:
        - Granularity: 1Minute
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1AID
        - !Ref PrivateSubnet2AID
      Tags:
        - Key: Name
          Value: turbine-worker
          PropagateAtLaunch: true

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref IamRole

  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName: !Sub TurbineAirflowWorkersetDescribeStackPolicy-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStackResource
                Resource: !Join
                  - ':'
                  - - arn:aws:cloudformation
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - !Sub stack/${AWS::StackName}/*
        - PolicyName: !Sub TurbineAirflowWorkersetGetSecretPolicy-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref DatabaseSecret
        - PolicyName: !Sub TurbineAirflowWorkersetQueueRWPolicy-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ListQueues
                Resource:
                  - !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${QueueName}
        - PolicyName: !Sub TurbineAirflowWorkersetLogsRWPolicy-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub arn:aws:s3:::${LogsBucket}/*

  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      FileSystemTags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-filesystem

  MountTarget1A:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PrivateSubnet1AID
      SecurityGroups:
        - !Ref EfsMountSecurityGroup

  MountTarget2A:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PrivateSubnet2AID
      SecurityGroups:
        - !Ref EfsMountSecurityGroup

  EfsMountSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        Security Rules with permissions for the shared filesystem across Airflow
        instances.
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref SecurityGroup
          IpProtocol: TCP
          FromPort: 2049
          ToPort: 2049
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: EfsMountSecurityGroup

  CloudWatchMetricLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.7
      Handler: load_metric.handler
      Code:
        S3Bucket: !If
          - UsingDefaultBucket
          - !Sub ${QSS3BucketName}-${AWS::Region}
          - !Ref QSS3BucketName
        S3Key: !Sub ${QSS3KeyPrefix}functions/package.zip
      Environment:
        Variables:
          GroupName: !Ref AutoScalingGroup
          QueueName: !Ref QueueName
          StackName: !Ref AWS::StackName
      Role: !GetAtt CloudWatchMetricLambdaRole.Arn

  CloudWatchMetricLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: cloudwatch-rw-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - cloudwatch:GetMetric*
                  - cloudwatch:PutMetricData

  CloudWatchMetricLambdaTimer:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !GetAtt
            - CloudWatchMetricLambda
            - Arn
          Id: TargetFunction

  CloudWatchMetricLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CloudWatchMetricLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt
        - CloudWatchMetricLambdaTimer
        - Arn

  LoadAboveThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref LoadAboveThresholdPolicy
      Namespace: Turbine
      MetricName: ClusterLoad
      Dimensions:
        - Name: StackName
          Value: !Ref AWS::StackName
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: !Ref GrowthThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold

  LoadAboveThresholdPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
      Cooldown: '600'
      AutoScalingGroupName: !Ref AutoScalingGroup

  LoadBelowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref LoadBelowThresholdPolicy
      Namespace: Turbine
      MetricName: ClusterLoad
      Dimensions:
        - Name: StackName
          Value: !Ref AWS::StackName
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: !Ref ShrinkThreshold
      ComparisonOperator: LessThanOrEqualToThreshold

  LoadBelowThresholdPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      ScalingAdjustment: -1
      Cooldown: '600'
      AutoScalingGroupName: !Ref AutoScalingGroup

  GracefulShutdownLifecycleHook:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DefaultResult: CONTINUE
      HeartbeatTimeout: 180
      LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING

Outputs:
  AutoScalingGroup:
    Value: !Ref AutoScalingGroup
  IamRole:
    Value: !Ref IamRole
  SecurityGroup:
    Value: !Ref SecurityGroup

Mappings:
  AWSAMIRegionMap:
    ap-northeast-1:
      AMZNLINUX2: ami-052652af12b58691f
    ap-northeast-2:
      AMZNLINUX2: ami-0db78afd3d150fc18
    ap-south-1:
      AMZNLINUX2: ami-03b5297d565ef30a6
    ap-southeast-1:
      AMZNLINUX2: ami-0cbc6aae997c6538a
    ap-southeast-2:
      AMZNLINUX2: ami-08fdde86b93accf1c
    ca-central-1:
      AMZNLINUX2: ami-0bf54ac1b628cf143
    eu-central-1:
      AMZNLINUX2: ami-0ec1ba09723e5bfac
    eu-west-1:
      AMZNLINUX2: ami-04d5cc9b88f9d1d39
    eu-west-2:
      AMZNLINUX2: ami-0cb790308f7591fa6
    eu-west-3:
      AMZNLINUX2: ami-07eda9385feb1e969
    sa-east-1:
      AMZNLINUX2: ami-0b032e878a66c3b68
    us-east-1:
      AMZNLINUX2: ami-0fc61db8544a617ed
    us-east-2:
      AMZNLINUX2: ami-0e01ce4ee18447327
    us-west-1:
      AMZNLINUX2: ami-09a7fe78668f1e2c0
    us-west-2:
      AMZNLINUX2: ami-0ce21b51cb31a48b8
